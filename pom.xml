<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>cz.sinko</groupId>
	<artifactId>money-manager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>money-manager</name>
	<description>Money manager</description>
	<properties>
		<java.version>19</java.version>
		<testcontainers.version>1.17.6</testcontainers.version>
		<lombok.version>1.18.26</lombok.version>
		<spring-cloud-starter-sleuth.version>3.1.7</spring-cloud-starter-sleuth.version>
		<rest-assured.version>5.3.0</rest-assured.version>
		<logbook-spring-boot-starter.version>3.0.0-RC.0</logbook-spring-boot-starter.version>
		<logbook-logstash.version>2.16.0</logbook-logstash.version>
		<janino.version>3.1.9</janino.version>
		<logstash-logabck-encoder.version>7.3</logstash-logabck-encoder.version>
		<mapstruct.version>1.5.3.Final</mapstruct.version>
		<gson.version>2.10.1</gson.version>
		<json.version>20201115</json.version>
		<opencsv.version>5.7.1</opencsv.version>
		<maven-dependency-plugin.version>3.3.0</maven-dependency-plugin.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<springdoc-openapi.version>2.0.4</springdoc-openapi.version>
		<gatling.version>3.9.0</gatling.version>
		<gatling-maven-plugin.version>4.2.9</gatling-maven-plugin.version>
		<faker.version>1.0.2</faker.version>
		<springdoc-openapi-starter.version>2.0.4</springdoc-openapi-starter.version>
		<hamcrest-all.version>1.3</hamcrest-all.version>
	</properties>
	<dependencies>
		<!--		tracid and spanid-->
		<!--		<dependency>-->
		<!--			<groupId>org.springframework.cloud</groupId>-->
		<!--			<artifactId>spring-cloud-starter-sleuth</artifactId>-->
		<!--			<version>${spring-cloud-starter-sleuth.version}</version>-->
		<!--		</dependency>-->
		<!--		<dependency>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-starter-graphql</artifactId>-->
		<!--		</dependency>-->
		<!--		<dependency>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-starter-data-jdbc</artifactId>-->
		<!--			<scope>test</scope>-->
		<!--		</dependency>-->
		<!--		<dependency>-->
		<!--			<groupId>org.json</groupId>-->
		<!--			<artifactId>json</artifactId>-->
		<!--			<version>${json.version}</version>-->
		<!--		</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!--		Reducing boilerplate code -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>

		<!--		Java annotation processor for generating type-safe bean mapping code -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

		<!--		LOGGING-->
		<!--		Logging requests and responses - logback.xml -->
		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>logbook-spring-boot-starter</artifactId>
			<version>${logbook-spring-boot-starter.version}</version>
		</dependency>
		<!--		Logging events to Logstash using Logbook - logback.xml -->
		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>logbook-logstash</artifactId>
			<version>${logbook-logstash.version}</version>
		</dependency>
		<!--		Log config if condition - logback.xml -->
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<version>${janino.version}</version>
		</dependency>
		<!--		Encoding Logback logging events into Logstash JSON format - logback.xml -->
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>${logstash-logabck-encoder.version}</version>
		</dependency>

		<!--		Serializing and deserializing JSON - MoneyManagerApplication -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency>

		<!--		Reading and writing CSV files - CsvUtil -->
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>${opencsv.version}</version>
		</dependency>

		<!-- Swagger -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc-openapi-starter.version}</version>
		</dependency>

		<!--		TEST SCOPE -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!--		Lightweight, throwaway instances of common databases, or anything else that can run in a Docker
		container -->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>

		<!--		Testing RESTful web services -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest-all.version}</version>
			<scope>test</scope>
		</dependency>

		<!--		Performance testing - Load Test -->
		<dependency>
			<groupId>io.gatling</groupId>
			<artifactId>gatling-app</artifactId>
			<version>${gatling.version}</version>
		</dependency>
		<dependency>
			<groupId>io.gatling.highcharts</groupId>
			<artifactId>gatling-charts-highcharts</artifactId>
			<version>${gatling.version}</version>
		</dependency>

		<!--		Generating fake data - Load Test -->
		<dependency>
			<groupId>com.github.javafaker</groupId>
			<artifactId>javafaker</artifactId>
			<version>${faker.version}</version>
		</dependency>

	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<useIncrementalCompilation>false</useIncrementalCompilation>
					<release>19</release>
					<encoding>UTF-8</encoding>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${lombok-mapstruct-binding.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.gatling</groupId>
				<artifactId>gatling-maven-plugin</artifactId>
				<version>${gatling-maven-plugin.version}</version>
				<configuration>
					<simulationClass>cz.sinko.moneymanager.LoadTest</simulationClass>
				</configuration>
			</plugin>

			<!--			Spotbugs plugin for static code analysis -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.7.2.1</version>
				<dependencies>
					<!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
					<dependency>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs</artifactId>
						<version>4.7.3</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

</project>
